version: "3.8" # * Docker Compose sürüm numarası

services: # * Servis tanımlamaları başlar
  wordpress: # * WordPress servisi tanımı
    image: wordpress:latest # * Kullanılacak Docker imajı
    ports:
      - "8080:80" # * Host makine üzerindeki port ile container portunu eşleştirme
    environment:
      WORDPRESS_DB_HOST: db # * Veritabanı host adı (servis adıyla aynı)
      WORDPRESS_DB_USER: example_user # * Veritabanı kullanıcı adı
      WORDPRESS_DB_PASSWORD: example_password # * Veritabanı parolası
      WORDPRESS_DB_NAME: example_db # * Veritabanı adı
    volumes:
      - wordpress_data:/var/www/html # * Veritabanı dışındaki verilerin saklanacağı volume
    volume_driver: my_volume_driver # * Özel bir volume sürücüsü belirleme
    networks:
      - my_network # * Servisler arası iletişim sağlayan ağ tanımı
    depends_on:
      - db # * WordPress servisinin başlamadan önce MySQL servisini beklemesi

    deploy:
      replicas: 3 # * Konteyner replikalarını belirleme
      update_config:
        parallelism: 2 # * Güncelleme işlemlerini paralel olarak gerçekleştirme
        delay: 10s # * Güncelleme işlemleri arasındaki gecikme
      restart_policy:
        condition: on-failure # * Yeniden başlatma politikası (hatada)
        delay: 5s # * Yeniden başlatma gecikmesi
        max_attempts: 3 # * Maksimum yeniden başlatma denemesi
      resources:
        limits:
          cpus: "0.5" # * CPU sınırları
          memory: "512M" # * Bellek sınırları

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"] # * Sağlık kontrolü için test komutu
      interval: 1m # * Sağlık kontrolü aralığı
      timeout: 10s # * Sağlık kontrolü süresi
      retries: 3 # * Sağlık kontrolü deneme sayısı

    logging: # * Günlük yapılandırması
      driver: "json-file"
      options:
        max-size: "10m" # * Bir günlük dosyasının maksimum boyutu
        max-file: "3" # * Maksimum günlük dosyası sayısı

    env_file: # * Çevresel değişken dosyası
      - .env # * Çevresel değişkenleri içeren dosyanın adı

    secrets: # * Sırlar
      - my_secret # * Docker'da saklanan sırların adı

    configs: # * Yapılandırmalar
      - my_config # * Docker'da saklanan yapılandırmaların adı

    labels: # * Etiketler
      - "com.example.description=My description"
      - "com.example.department=IT"

    isolation: # * İzolasyon
      hyperv # * İzolasyon modunu belirleme (örneğin, Hyper-V)

    x-example-field: "example value" # * Uzantı alanları

    command: ["echo", "Hello World"] # * Komut belirleme

    external_links: # * Dış ağlara bağlanma
      - my_external_network

    build: # * Dockerfile'ı belirleme
      context: ./my-service
      dockerfile: Dockerfile.prod

    entrypoint: ["java", "-jar", "myapp.jar"] # * Giriş noktasını belirleme

    tmpfs: # * Geçici dosya sistemini belirleme
      - /tmp

    devices: # * Cihazları bağlama
      - "/dev/ttyUSB0:/dev/ttyUSB0"

    cgroup_parent: my_group # * Cgroup ebeveynini belirleme

    ulimits: # * Ulimits sınırlarını belirleme
      nproc: 65535

  db: # * Veritabanı servisi tanımı
    image: mysql:5.7 # * Kullanılacak Docker imajı
    environment:
      MYSQL_DATABASE: example_db # * Veritabanı adı
      MYSQL_USER: example_user # * Veritabanı kullanıcı adı
      MYSQL_PASSWORD: example_password # * Veritabanı parolası
      MYSQL_ROOT_PASSWORD: root_password # * MySQL root parolası
    volumes:
      - db_data:/var/lib/mysql # * Veritabanı dışındaki verilerin saklanacağı volume
    networks:
      - my_network # * Servisler arası iletişim sağlayan ağ tanımı

secrets:
  my_secret:
    external: true # * Dışarıdan sağlanan bir sırdır

configs:
  my_config:
    external: true # * Dışarıdan sağlanan bir yapılandırmadır

networks:
  my_network: # * Yeni bir ağ tanımı
    driver: bridge # * Ağ sürücüsü belirleme

volumes: # * Volume tanımlamaları başlar
  wordpress_data: # * WordPress verileri için volume
  db_data: # * Veritabanı verileri için volume
